<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uver.event">
	<sql id="eventColumns">
		 event_seq AS eventSeq,								  
		 user_id AS userId,										  
		 event_nm AS eventNm,                                       
		 content,                                       
		 capacity,                                      
		 movie_info AS movieInfo,                                    
		 start_dt AS startDt,                                      
		 end_dt AS endDt,                                        
		 location,                                      
		 TO_CHAR(reg_dt, 'YY/MM/DD HH24MISS') regDt,
		 TO_CHAR(target_dt,'YYYY"년 "MM"월 "DD"일" AM HH:MI') AS targetDt,                              
		 reg_id AS regId                                	
	</sql>

	<sql id="searchCondition">
		<choose>
			<when test=" '10' == searchDiv">
				<where>
				 event_nm like '%' || #{searchWord} || '%'
				 AND target_dt  <![CDATA[ >= ]]> TO_DATE(#{searchDate}  , 'YYYYMMDD')
				 	<foreach item="genre" index="index" collection="genreList" 
      				open="AND (genre LIKE" separator="OR genre LIKE" close=")">
        			'%' || #{genre} || '%'
          			</foreach> 
				</where>
			</when>
		
			<when test=" '20' == searchDiv">
				<where>
				event_nm like '%' || #{searchWord} || '%'
				AND target_dt like '%' || #{searchDate} || '%'
				</where>
			</when>
			
			<when test=" '30' == searchDiv">
				<where>
				genre like '%' || #{searchWord} || '%'
				AND target_dt like '%' || #{searchDate} || '%'
				</where>
			</when>
		</choose>
	</sql>



	<!-- 목록조회 -->
	<select id="doSelectList" parameterType="Search" resultType="EventVO">
		SELECT T1.*,T2.*                                                            
		FROM                                                                        
		 (                                                                          
		     SELECT B.rnum AS num,                                   
		            B.event_seq AS eventSeq,                        
					B.user_id AS userId,                                 
					B.event_nm AS eventNm,                     
					B.content,                                                     
					B.capacity,                                                    
					B.movie_info AS movieInfo, 
					B.location,                                                    
					TO_CHAR(B.reg_dt,'MM-DD AM HH:MI') AS regDt,                  
					TO_CHAR(B.target_dt,'MM"월"DD"일" AM HH:MI') AS targetDt,                                  
					B.reg_id AS regId,
					B.genre                   
		     FROM (                                                                 
		         SELECT ROWNUM rnum, A.*                                            
		         FROM(                                                            
		             SELECT *                                                       
		             FROM  event 
		             <include refid="searchCondition"/>                                               
		             ORDER BY reg_dt DESC                                           
 		         )A                                                                 
		         WHERE ROWNUM <![CDATA[ <= ]]> (#{pageSize} *(#{pageNum}-1)+#{pageSize})              
		     )B                                                                     
		     WHERE B.rnum <![CDATA[ >= ]]> (#{pageSize} *(#{pageNum}-1)+1)                           
		     )T1                                                                    
		     CROSS JOIN                                                             
		     (SELECT COUNT(*) totalCnt                                             
		      FROM  event
		      <include refid="searchCondition"/>                                                       
		     )T2     
	</select>



	<!-- 단건조회 -->
	<select id="doSelectOne" parameterType="EventVO" resultType="EventVO">
		SELECT <include refid="eventColumns"/>
		FROM event
		WHERE event_seq = #{eventSeq}
	</select>



<!-- 수정 -->
	<update id="doUpdate" parameterType="EventVO">
		UPDATE event			
		SET user_id = #{userId,jdbcType=VARCHAR}    
		    ,event_nm = #{eventNm,jdbcType=VARCHAR}   
		    ,content = #{content,jdbcType=VARCHAR}    
		    ,capacity = #{capacity,jdbcType=INTEGER}   
		    ,movie_info = #{movieInfo,jdbcType=VARCHAR} 
		    ,start_dt = TO_DATE('','YYYY-MM-DD HH24:MI:SS')  
		    ,end_dt = TO_DATE('','YYYY-MM-DD HH24:MI:SS')     
		    ,location = #{location,jdbcType=VARCHAR}   
		    ,target_dt = TO_DATE('','YYYY-MM-DD HH24:MI:SS')  
		    ,reg_id = #{regId,jdbcType=VARCHAR}
		    ,genre = #{genre,jdbcType=VARCHAR}
		WHERE event_seq = #{eventSeq,jdbcType=INTEGER} 
	</update>
	
	
	
	<!-- 삭제 -->
	<delete id="doDelete" parameterType="EventVO">
		DELETE FROM event	
		WHERE event_seq = #{eventSeq} 
	</delete>
	
	
	
	<!-- 등록 -->
	<insert id="doInsert" parameterType="EventVO">
		<selectKey keyProperty="eventSeq" resultType="int" order="BEFORE">
			SELECT SEQ_EVENT.NEXTVAL As eventSeq FROM DUAL
		</selectKey>
		INSERT INTO event (		
		    event_seq,         
		    user_id,           
		    event_nm,          
		    content,           
		    capacity,          
		    movie_info,        
		    start_dt,          
		    end_dt,            
		    location,          
		    reg_dt,            
		    target_dt,         
		    reg_id,
		    genre             
		) VALUES (             
		    ${eventSeq},                 
		    #{userId},                 
		    #{eventNm},                 
		    #{content},                 
		    #{capacity},                 
		    #{movieInfo},                 
		    TO_DATE(#{startDt}, 'YYYY-MM-DD'),                 
		    TO_DATE(#{endDt}, 'YYYY-MM-DD'),                 
		    #{location},                 
		    SYSDATE,           
		    TO_DATE(#{targetDt}, 'YYYY-MM-DD HH24:MI:SS'),                 
		    #{regId},
		    #{genre}                 
		)                      
	
	</insert>

</mapper>